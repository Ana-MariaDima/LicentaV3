// <auto-generated />
using System;
using Licenta.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Licenta.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
           /* modelBuilder.Entity("Licenta.Models.Relations.One_to_Many.SugestionResult", b =>
            {
                b.Property<Guid>("IdUser").ValueGeneratedOnAdd().HasColumnType("uniqueidentifier");
                b.HasKey("IdUser");
            });*/

     

            modelBuilder.Entity("Laborator54522021.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Licenta.Models.Relations.Many_to_Many.Aprecieri", b =>
                {
                    b.Property<Guid>("IdReteta")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdReteta", "IdUser");

                    b.HasIndex("IdUser");

                    b.HasIndex("IdReteta", "IdUser")
                        .IsUnique();

                    b.ToTable("Apreciere");
                });

            modelBuilder.Entity("Licenta.Models.Relations.Many_to_Many.Ingrediente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdSubCategorieIngredient")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nume_ingredient")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("SubCategorieIngredientId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Nume_ingredient")
                        .IsUnique();

                    b.HasIndex("SubCategorieIngredientId");

                    b.ToTable("Ingredient");
                });

            modelBuilder.Entity("Licenta.Models.Relations.One_to_Many.CategoriiIngrediente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Descriere_categorie_ingredient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume_categoriie_ingredient")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Nume_categoriie_ingredient")
                        .IsUnique();

                    b.ToTable("CategorieIngredient");
                });

            modelBuilder.Entity("Licenta.Models.Relations.One_to_Many.CategoriiRetete", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Nume_Categorie_Retete")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Nume_Categorie_Retete")
                        .IsUnique();

                    b.ToTable("CategorieReteta");
                });

            modelBuilder.Entity("Licenta.Models.Relations.One_to_Many.Pahare", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Nume_Pahar")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Nume_Pahar")
                        .IsUnique();

                    b.ToTable("Pahar");
                });

            modelBuilder.Entity("Licenta.Models.Relations.One_to_Many.RetetaIngrediente", b =>
                {
                    b.Property<Guid>("IdReteta")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdIngredient")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cantitate_Ingredient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUnitate")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdReteta", "IdIngredient");

                    b.HasIndex("IdIngredient");

                    b.HasIndex("UnitateId");

                    b.ToTable("RetetaIngredient");
                });

            modelBuilder.Entity("Licenta.Models.Relations.One_to_Many.Retete", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategorieRetetaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Descriere_reteta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdCategorieReteta")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPahar")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTipReteta")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Instructiuni_reteta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume_reteta")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("PaharId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Poza_reteta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Rating_retea")
                        .HasColumnType("real");

                    b.Property<Guid?>("TipRetetaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategorieRetetaId");

                    b.HasIndex("Nume_reteta")
                        .IsUnique();

                    b.HasIndex("PaharId");

                    b.HasIndex("TipRetetaId");

                    b.ToTable("Reteta");
                });

            modelBuilder.Entity("Licenta.Models.Relations.One_to_Many.SubCategoriiIngrediente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategorieIngredientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Descriere_subcategorie_ingredient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdCategorieIngredient")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nume_Subcategorie_ingredient")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategorieIngredientId");

                    b.HasIndex("Nume_Subcategorie_ingredient")
                        .IsUnique();

                    b.ToTable("SubCategorieIngredient");
                });

            modelBuilder.Entity("Licenta.Models.Relations.One_to_Many.TipuriRetete", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Nume_Tip_Retete")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Nume_Tip_Retete")
                        .IsUnique();

                    b.ToTable("TipReteta");
                });

            modelBuilder.Entity("Licenta.Models.Relations.One_to_Many.Unitati", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Nume_unitate")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Nume_unitate")
                        .IsUnique();

                    b.ToTable("Unitate");
                });

            modelBuilder.Entity("Licenta.Models.Relations.Many_to_Many.Aprecieri", b =>
                {
                    b.HasOne("Licenta.Models.Relations.One_to_Many.Retete", "Reteta")
                        .WithMany("Apreciere")
                        .HasForeignKey("IdReteta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Laborator54522021.Models.User", "User")
                        .WithMany("Apreciere")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reteta");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Licenta.Models.Relations.Many_to_Many.Ingrediente", b =>
                {
                    b.HasOne("Licenta.Models.Relations.One_to_Many.SubCategoriiIngrediente", "SubCategorieIngredient")
                        .WithMany("Ingrediente")
                        .HasForeignKey("SubCategorieIngredientId");

                    b.Navigation("SubCategorieIngredient");
                });

            modelBuilder.Entity("Licenta.Models.Relations.One_to_Many.RetetaIngrediente", b =>
                {
                    b.HasOne("Licenta.Models.Relations.Many_to_Many.Ingrediente", "Ingredient")
                        .WithMany("RetetaIngredient")
                        .HasForeignKey("IdIngredient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Licenta.Models.Relations.One_to_Many.Retete", "Reteta")
                        .WithMany("RetetaIngredient")
                        .HasForeignKey("IdReteta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Licenta.Models.Relations.One_to_Many.Unitati", "Unitate")
                        .WithMany("ReteteIngrediente")
                        .HasForeignKey("UnitateId");

                    b.Navigation("Ingredient");

                    b.Navigation("Reteta");

                    b.Navigation("Unitate");
                });

            modelBuilder.Entity("Licenta.Models.Relations.One_to_Many.Retete", b =>
                {
                    b.HasOne("Licenta.Models.Relations.One_to_Many.CategoriiRetete", "CategorieReteta")
                        .WithMany("Retete")
                        .HasForeignKey("CategorieRetetaId");

                    b.HasOne("Licenta.Models.Relations.One_to_Many.Pahare", "Pahar")
                        .WithMany("Retete")
                        .HasForeignKey("PaharId");

                    b.HasOne("Licenta.Models.Relations.One_to_Many.TipuriRetete", "TipReteta")
                        .WithMany("Retete")
                        .HasForeignKey("TipRetetaId");

                    b.Navigation("CategorieReteta");

                    b.Navigation("Pahar");

                    b.Navigation("TipReteta");
                });

            modelBuilder.Entity("Licenta.Models.Relations.One_to_Many.SubCategoriiIngrediente", b =>
                {
                    b.HasOne("Licenta.Models.Relations.One_to_Many.CategoriiIngrediente", "CategorieIngredient")
                        .WithMany("SubCategoriiIngrediente")
                        .HasForeignKey("CategorieIngredientId");

                    b.Navigation("CategorieIngredient");
                });

            modelBuilder.Entity("Laborator54522021.Models.User", b =>
                {
                    b.Navigation("Apreciere");
                });

            modelBuilder.Entity("Licenta.Models.Relations.Many_to_Many.Ingrediente", b =>
                {
                    b.Navigation("RetetaIngredient");
                });

            modelBuilder.Entity("Licenta.Models.Relations.One_to_Many.CategoriiIngrediente", b =>
                {
                    b.Navigation("SubCategoriiIngrediente");
                });

            modelBuilder.Entity("Licenta.Models.Relations.One_to_Many.CategoriiRetete", b =>
                {
                    b.Navigation("Retete");
                });

            modelBuilder.Entity("Licenta.Models.Relations.One_to_Many.Pahare", b =>
                {
                    b.Navigation("Retete");
                });

            modelBuilder.Entity("Licenta.Models.Relations.One_to_Many.Retete", b =>
                {
                    b.Navigation("Apreciere");

                    b.Navigation("RetetaIngredient");
                });

            modelBuilder.Entity("Licenta.Models.Relations.One_to_Many.SubCategoriiIngrediente", b =>
                {
                    b.Navigation("Ingrediente");
                });

            modelBuilder.Entity("Licenta.Models.Relations.One_to_Many.TipuriRetete", b =>
                {
                    b.Navigation("Retete");
                });

            modelBuilder.Entity("Licenta.Models.Relations.One_to_Many.Unitati", b =>
                {
                    b.Navigation("ReteteIngrediente");
                });

    
#pragma warning restore 612, 618
        }
    }
}
